name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Copy files to temporary directory on EC2
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          passphrase: ${{ secrets.EC2_PASSPHRASE }}
          source: 'build/*'
          target: '/home/${{ secrets.EC2_USER }}/build/'

      - name: Verify files in temporary directory
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          passphrase: ${{ secrets.EC2_PASSPHRASE }}
          script: |
            echo "Contents of /home/${{ secrets.EC2_USER }}/build/"
            ls -l /home/${{ secrets.EC2_USER }}/build/

      - name: Move files to Nginx directory
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          passphrase: ${{ secrets.EC2_PASSPHRASE }}
          script: |
            sudo mv /home/${{ secrets.EC2_USER }}/build/* /usr/share/nginx/html/
            sudo rm -rf /home/${{ secrets.EC2_USER }}/build

      - name: Restart Nginx
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          passphrase: ${{ secrets.EC2_PASSPHRASE }}
          script: 'sudo systemctl restart nginx'
